name: Release

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  # the create-release would be used once we want to create a specific release based on if the commit has a tag
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        env:
          # (required)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # upload the app package for each target os
  upload-assets:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-12
          - os: macos-latest
          # - os: windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'
      - name: Windows only, install wget
        if: ${{ runner.os == 'Windows' }}
        run: |
          choco install wget --no-progress
      - name: Run install
        run: |
          yarn install --frozen-lockfile
      - name: setup for codesigning (macos only)
        if: ${{ runner.os == 'macOS' }}
        uses: figleafteam/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.HBE_APPLE_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.HBE_APPLE_CERTIFICATE_PASS }}
      - name: build acorn (and notarize it- macos latest only)
        if: ${{ matrix.os == 'macos-latest' }}
        env:
          ARCH: arm64
          APPLE_DEV_IDENTITY: ${{ secrets.APPLE_DEV_IDENTITY }}
          APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          DEBUG: electron-osx-sign*,electron-notarize*
        run: |
          yarn run build
        shell: bash
      - name: build acorn (and notarize it- macos 12 only)
        if: ${{ matrix.os == 'macos-12' }}
        env:
          ARCH: x64
          APPLE_DEV_IDENTITY: ${{ secrets.APPLE_DEV_IDENTITY }}
          APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          DEBUG: electron-osx-sign*,electron-notarize*
        run: |
          yarn run build
        shell: bash
      - name: build acorn (ubuntu only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          yarn run build
      - name: upload binary (ubuntu only)
        if: ${{ runner.os == 'Linux' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${GITHUB_REF#refs/tags/}" "electron/out/Acorn-11.0.4.AppImage" --clobber
      - name: upload binary (macos-latest only)
        if: ${{ matrix.os == 'macos-latest' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${GITHUB_REF#refs/tags/}" "electron/out/Acorn.11.0.4.darwin-arm64.zip" --clobber
      - name: upload binary (macos-12 only)
        if: ${{ matrix.os == 'macos-12' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${GITHUB_REF#refs/tags/}" "electron/out/Acorn.11.0.4.darwin-x64.zip" --clobber
      - name: upload binary (Windows only)
        if: ${{ runner.os == 'Windows' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$($env:GITHUB_REF -replace "refs/tags/")" "electron/out/Acorn.Setup.11.0.4.exe" --clobber
